// Generated by CoffeeScript 1.3.3
(function() {
  var Emitter, dom, elementsOverlap;

  Emitter = require("emitter");

  elementsOverlap = require("elements-overlap");

  dom = require("dom");

  module.exports = function(surface, selectable, selectedClass) {
    var drawingBox, emitter, selected, startX, startY, surfaceElement;
    emitter = new Emitter;
    drawingBox = false;
    selected = false;
    startX = 0;
    startY = 0;
    surfaceElement = document.querySelector(surface);
    surfaceElement.addEventListener("mousedown", function(e) {
      if (selected) {
        selected.removeClass(selectedClass);
      }
      startX = e.pageX;
      startY = e.pageY;
      drawingBox = dom("<div />");
      drawingBox.addClass("groupSelectionBox").css("left", e.pageX + "px").css("top", e.pageY + "px");
      return document.body.appendChild(drawingBox.get(0));
    });
    surfaceElement.addEventListener("mousemove", function(e) {
      var height, left, top, width;
      if (drawingBox) {
        if (e.pageX < startX) {
          left = e.pageX;
          width = startX - left;
        } else {
          left = startX;
          width = e.pageX - left;
        }
        if (e.pageY < startY) {
          top = e.pageY;
          height = startY - top;
        } else {
          top = startY;
          height = e.pageY - top;
        }
        drawingBox.css("left", left + "px").css("top", top + "px").css("width", width + "px").css("height", height + "px");
        return selected = dom("" + surface + " " + selectable, document).removeClass(selectedClass).filter(function(el) {
          return elementsOverlap(drawingBox.get(0), el.get(0));
        }).addClass(selectedClass);
      }
    });
    surfaceElement.addEventListener("mouseup", function(e) {
      if (drawingBox) {
        document.body.removeChild(drawingBox.get(0));
        drawingBox = false;
      }
      if (selected && selected.length()) {
        selected.removeClass(selectedClass);
        emitter.emit("itemsSelected", selected);
        return selected = false;
      }
    });
    return emitter;
  };

}).call(this);
